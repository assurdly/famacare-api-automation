{"uid":"fb074f9d61008dff","name":"Update Patient (upi)-EmptyFields","fullName":"FamaEMR - Test pack/SUPER_ADMIN/Users(Patient)/Users(Patient)-Update(upi)#Update Patient (upi)-EmptyFields","historyId":"aa700776b11dcd72d5e2a89ca25cdd6e:5a2dc3321712ca57c4885a2472511c02","time":{"start":1739562580949,"stop":1739562581064,"duration":115},"status":"failed","statusMessage":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Response status code is 400","time":{"start":1739562581061,"stop":1739562581061,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:43)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Response status is failed","time":{"start":1739562581061,"stop":1739562581061,"duration":0},"status":"failed","statusMessage":"expected undefined to deeply equal 'failed'","statusTrace":"AssertionError: expected undefined to deeply equal 'failed'\n   at Object.eval sandbox-script.js:2:43)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Error list is not empty","time":{"start":1739562581062,"stop":1739562581062,"duration":0},"status":"failed","statusMessage":"expected undefined to be an array","statusTrace":"AssertionError: expected undefined to be an array\n   at Object.eval sandbox-script.js:3:43)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Validating required fields","time":{"start":1739562581062,"stop":1739562581062,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'some')","statusTrace":"TypeError: Cannot read properties of undefined (reading 'some')\n   at Object.eval sandbox-script.js:4:43)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Each error object has required properties","time":{"start":1739562581063,"stop":1739562581063,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'forEach')","statusTrace":"TypeError: Cannot read properties of undefined (reading 'forEach')\n   at Object.eval sandbox-script.js:5:43)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"7892e7082d506fec","name":"TestScript","source":"7892e7082d506fec.txt","type":"text/plain","size":1231},{"uid":"e34232a9ba91274c","name":"Request Headers","source":"e34232a9ba91274c.json","type":"application/json","size":578},{"uid":"91d63c5d6eb45e8","name":"Request Body","source":"91d63c5d6eb45e8.txt","type":"text/plain","size":686},{"uid":"3ca032ec0fa81a41","name":"Response Headers","source":"3ca032ec0fa81a41.json","type":"application/json","size":579},{"uid":"5bbaf07ca5fe2d50","name":"Response Body","source":"5bbaf07ca5fe2d50.txt","type":"text/plain","size":31}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":5,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1909-441"},{"name":"thread","value":"pid-2360-worker-main"},{"name":"parentSuite","value":"FamaEMR - Test pack"},{"name":"suite","value":"SUPER_ADMIN"},{"name":"subSuite","value":"Users(Patient) > Users(Patient)-Update(upi)"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"PUT - https://nelloehrback.onrender.com/api/patient/unique/D528326B"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":22,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":22},"items":[{"uid":"409462d303f76992","reportUrl":"https://assurdly.github.io/famacare-api-automation/27//#testresult/409462d303f76992","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","time":{"start":1739557902233,"stop":1739557902366,"duration":133}},{"uid":"3dc219c3c0a6e17f","reportUrl":"https://assurdly.github.io/famacare-api-automation/26//#testresult/3dc219c3c0a6e17f","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","time":{"start":1739555835801,"stop":1739555835916,"duration":115}},{"uid":"fcadb2628f701421","reportUrl":"https://assurdly.github.io/famacare-api-automation/25//#testresult/fcadb2628f701421","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","time":{"start":1739555656180,"stop":1739555656325,"duration":145}},{"uid":"499bc4ca1e1c5ae6","reportUrl":"https://assurdly.github.io/famacare-api-automation/24//#testresult/499bc4ca1e1c5ae6","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","time":{"start":1739555611748,"stop":1739555611883,"duration":135}},{"uid":"1a58f9ba96b7a553","reportUrl":"https://assurdly.github.io/famacare-api-automation/23//#testresult/1a58f9ba96b7a553","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","time":{"start":1739555463113,"stop":1739555463186,"duration":73}},{"uid":"978d285a7c22b374","reportUrl":"https://assurdly.github.io/famacare-api-automation/22//#testresult/978d285a7c22b374","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","time":{"start":1739555276791,"stop":1739555276924,"duration":133}},{"uid":"d7a1afc80dddf54e","reportUrl":"https://assurdly.github.io/famacare-api-automation/21//#testresult/d7a1afc80dddf54e","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","time":{"start":1739555086295,"stop":1739555086402,"duration":107}},{"uid":"a601ecce15327b12","reportUrl":"https://assurdly.github.io/famacare-api-automation/20//#testresult/a601ecce15327b12","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","time":{"start":1739554901455,"stop":1739554901536,"duration":81}},{"uid":"d5235ed672e575cc","reportUrl":"https://assurdly.github.io/famacare-api-automation/19//#testresult/d5235ed672e575cc","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","time":{"start":1739554716208,"stop":1739554716317,"duration":109}},{"uid":"6efe3775575a53cb","reportUrl":"https://assurdly.github.io/famacare-api-automation/18//#testresult/6efe3775575a53cb","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","time":{"start":1739554537281,"stop":1739554537428,"duration":147}},{"uid":"962254da3fbb7b99","reportUrl":"https://assurdly.github.io/famacare-api-automation/17//#testresult/962254da3fbb7b99","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","time":{"start":1739554339549,"stop":1739554339865,"duration":316}},{"uid":"2882a619074f1034","reportUrl":"https://assurdly.github.io/famacare-api-automation/16//#testresult/2882a619074f1034","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","time":{"start":1739554145931,"stop":1739554146037,"duration":106}},{"uid":"f869517734a2ed5b","reportUrl":"https://assurdly.github.io/famacare-api-automation/15//#testresult/f869517734a2ed5b","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","time":{"start":1739553956060,"stop":1739553956169,"duration":109}},{"uid":"e078f0ef512559ac","reportUrl":"https://assurdly.github.io/famacare-api-automation/14//#testresult/e078f0ef512559ac","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","time":{"start":1739553761688,"stop":1739553761811,"duration":123}},{"uid":"a558e038a295b925","reportUrl":"https://assurdly.github.io/famacare-api-automation/13//#testresult/a558e038a295b925","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","time":{"start":1739553559751,"stop":1739553559911,"duration":160}},{"uid":"afb09d9075d257bb","reportUrl":"https://assurdly.github.io/famacare-api-automation/12//#testresult/afb09d9075d257bb","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","time":{"start":1739553367923,"stop":1739553367992,"duration":69}},{"uid":"166f8f42f1139038","reportUrl":"https://assurdly.github.io/famacare-api-automation/11//#testresult/166f8f42f1139038","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","time":{"start":1739553169332,"stop":1739553169484,"duration":152}},{"uid":"68a0bb3aaf051081","reportUrl":"https://assurdly.github.io/famacare-api-automation/10//#testresult/68a0bb3aaf051081","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","time":{"start":1739552983809,"stop":1739552983969,"duration":160}},{"uid":"19829b6b485a1ce1","reportUrl":"https://assurdly.github.io/famacare-api-automation/9//#testresult/19829b6b485a1ce1","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","time":{"start":1739552799887,"stop":1739552799981,"duration":94}},{"uid":"8a41e6c8d85a7dd2","reportUrl":"https://assurdly.github.io/famacare-api-automation/8//#testresult/8a41e6c8d85a7dd2","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","time":{"start":1739552616018,"stop":1739552616173,"duration":155}}]},"tags":[]},"source":"fb074f9d61008dff.json","parameterValues":["PUT - https://nelloehrback.onrender.com/api/patient/unique/D528326B","401"]}