{"uid":"f2e879351eb959be","name":"Update Patient (upi)-EmptyFields","fullName":"FamaEMR - Test pack/RECEPTIONIST/Users(Patient)/Users(Patient)-Update(upi)#Update Patient (upi)-EmptyFields","historyId":"19bca837fca3ef99ccdbcae93e1a8efc:5a2dc3321712ca57c4885a2472511c02","time":{"start":1739557985595,"stop":1739557985691,"duration":96},"status":"failed","statusMessage":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Response status code is 400","time":{"start":1739557985687,"stop":1739557985687,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:162)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Response status is failed","time":{"start":1739557985688,"stop":1739557985688,"duration":0},"status":"failed","statusMessage":"expected undefined to deeply equal 'failed'","statusTrace":"AssertionError: expected undefined to deeply equal 'failed'\n   at Object.eval sandbox-script.js:2:162)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Error list is not empty","time":{"start":1739557985688,"stop":1739557985688,"duration":0},"status":"failed","statusMessage":"expected undefined to be an array","statusTrace":"AssertionError: expected undefined to be an array\n   at Object.eval sandbox-script.js:3:162)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Validating required fields","time":{"start":1739557985689,"stop":1739557985689,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'some')","statusTrace":"TypeError: Cannot read properties of undefined (reading 'some')\n   at Object.eval sandbox-script.js:4:162)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Each error object has required properties","time":{"start":1739557985689,"stop":1739557985689,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'forEach')","statusTrace":"TypeError: Cannot read properties of undefined (reading 'forEach')\n   at Object.eval sandbox-script.js:5:162)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"1429dd690028ec99","name":"TestScript","source":"1429dd690028ec99.txt","type":"text/plain","size":1231},{"uid":"3c80e0db44562bd","name":"Request Headers","source":"3c80e0db44562bd.json","type":"application/json","size":586},{"uid":"566fb7756c5b0ff7","name":"Request Body","source":"566fb7756c5b0ff7.txt","type":"text/plain","size":686},{"uid":"585af03fa71ec5b2","name":"Response Headers","source":"585af03fa71ec5b2.json","type":"application/json","size":579},{"uid":"442d916bb1a26a1a","name":"Response Body","source":"442d916bb1a26a1a.txt","type":"text/plain","size":31}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":5,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1319-980"},{"name":"thread","value":"pid-2340-worker-main"},{"name":"parentSuite","value":"FamaEMR - Test pack"},{"name":"suite","value":"RECEPTIONIST"},{"name":"subSuite","value":"Users(Patient) > Users(Patient)-Update(upi)"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"PUT - https://nelloehrback.onrender.com/api/patient/unique/D528326B"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":11,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":11},"items":[{"uid":"e312e924c577bd0","reportUrl":"https://assurdly.github.io/famacare-api-automation/26//#testresult/e312e924c577bd0","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","time":{"start":1739555925564,"stop":1739555925681,"duration":117}},{"uid":"40f2c0933f4185f1","reportUrl":"https://assurdly.github.io/famacare-api-automation/25//#testresult/40f2c0933f4185f1","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","time":{"start":1739555777147,"stop":1739555777295,"duration":148}},{"uid":"6af97ac4dc9a03d3","reportUrl":"https://assurdly.github.io/famacare-api-automation/24//#testresult/6af97ac4dc9a03d3","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","time":{"start":1739555697211,"stop":1739555697340,"duration":129}},{"uid":"278287dd859a9ad5","reportUrl":"https://assurdly.github.io/famacare-api-automation/23//#testresult/278287dd859a9ad5","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","time":{"start":1739555541349,"stop":1739555541437,"duration":88}},{"uid":"bd9758cc32a6d99e","reportUrl":"https://assurdly.github.io/famacare-api-automation/22//#testresult/bd9758cc32a6d99e","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","time":{"start":1739555362683,"stop":1739555362822,"duration":139}},{"uid":"77c758177429bbc4","reportUrl":"https://assurdly.github.io/famacare-api-automation/21//#testresult/77c758177429bbc4","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","time":{"start":1739555169548,"stop":1739555169665,"duration":117}},{"uid":"661795a2681c1de5","reportUrl":"https://assurdly.github.io/famacare-api-automation/20//#testresult/661795a2681c1de5","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","time":{"start":1739554985480,"stop":1739554985558,"duration":78}},{"uid":"fcc0bd9a3f92f71","reportUrl":"https://assurdly.github.io/famacare-api-automation/19//#testresult/fcc0bd9a3f92f71","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","time":{"start":1739554803137,"stop":1739554803245,"duration":108}},{"uid":"bc5f0fb2f7deec6a","reportUrl":"https://assurdly.github.io/famacare-api-automation/18//#testresult/bc5f0fb2f7deec6a","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","time":{"start":1739554627399,"stop":1739554627570,"duration":171}},{"uid":"3a1f670f69af863c","reportUrl":"https://assurdly.github.io/famacare-api-automation/17//#testresult/3a1f670f69af863c","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","time":{"start":1739554427701,"stop":1739554427838,"duration":137}}]},"tags":[]},"source":"f2e879351eb959be.json","parameterValues":["PUT - https://nelloehrback.onrender.com/api/patient/unique/D528326B","401"]}