{"uid":"6234fa2744f53bfd","name":"Update Patient (upi)-Update","fullName":"FamaEMR - Test pack/RECEPTIONIST/Users(Patient)/Users(Patient)-Update(upi)#Update Patient (upi)-Update","historyId":"6f58bf4397da42e18dc89ecdbb025389:5a2dc3321712ca57c4885a2472511c02","time":{"start":1739557985469,"stop":1739557985592,"duration":123},"status":"failed","statusMessage":"Response has status code 200, Patient update was successful, Patient data structure is valid, Allergies data structure is valid","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Response has status code 200, Patient update was successful, Patient data structure is valid, Allergies data structure is valid","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Response has status code 200","time":{"start":1739557985588,"stop":1739557985588,"duration":0},"status":"failed","statusMessage":"expected response to have status code 200 but got 401","statusTrace":"AssertionError: expected response to have status code 200 but got 401\n   at Object.eval sandbox-script.js:1:161)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Patient update was successful","time":{"start":1739557985588,"stop":1739557985588,"duration":0},"status":"failed","statusMessage":"expected undefined to deeply equal 'success'","statusTrace":"AssertionError: expected undefined to deeply equal 'success'\n   at Object.eval sandbox-script.js:2:161)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Patient data structure is valid","time":{"start":1739557985589,"stop":1739557985589,"duration":0},"status":"failed","statusMessage":"expected undefined to be an object","statusTrace":"AssertionError: expected undefined to be an object\n   at Object.eval sandbox-script.js:3:161)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Allergies data structure is valid","time":{"start":1739557985590,"stop":1739557985590,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'allergies')","statusTrace":"TypeError: Cannot read properties of undefined (reading 'allergies')\n   at Object.eval sandbox-script.js:4:161)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"22119b0cb3fe6809","name":"TestScript","source":"22119b0cb3fe6809.txt","type":"text/plain","size":1571},{"uid":"fdc303f080e55cf6","name":"Request Headers","source":"fdc303f080e55cf6.json","type":"application/json","size":586},{"uid":"9e92646103677246","name":"Request Body","source":"9e92646103677246.txt","type":"text/plain","size":899},{"uid":"9c3c3fc857859fc2","name":"Response Headers","source":"9c3c3fc857859fc2.json","type":"application/json","size":579},{"uid":"c62bfde4db85d9e2","name":"Response Body","source":"c62bfde4db85d9e2.txt","type":"text/plain","size":31}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1319-980"},{"name":"thread","value":"pid-2340-worker-main"},{"name":"parentSuite","value":"FamaEMR - Test pack"},{"name":"suite","value":"RECEPTIONIST"},{"name":"subSuite","value":"Users(Patient) > Users(Patient)-Update(upi)"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"PUT - https://nelloehrback.onrender.com/api/patient/unique/D528326B"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":11,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":11},"items":[{"uid":"b6d6fdc1451a754c","reportUrl":"https://assurdly.github.io/famacare-api-automation/26//#testresult/b6d6fdc1451a754c","status":"failed","statusDetails":"Response has status code 200, Patient update was successful, Patient data structure is valid, Allergies data structure is valid","time":{"start":1739555925450,"stop":1739555925561,"duration":111}},{"uid":"daf0829cab96c10e","reportUrl":"https://assurdly.github.io/famacare-api-automation/25//#testresult/daf0829cab96c10e","status":"failed","statusDetails":"Response has status code 200, Patient update was successful, Patient data structure is valid, Allergies data structure is valid","time":{"start":1739555776997,"stop":1739555777144,"duration":147}},{"uid":"98d3d5e35e8c934b","reportUrl":"https://assurdly.github.io/famacare-api-automation/24//#testresult/98d3d5e35e8c934b","status":"failed","statusDetails":"Response has status code 200, Patient update was successful, Patient data structure is valid, Allergies data structure is valid","time":{"start":1739555697070,"stop":1739555697209,"duration":139}},{"uid":"34c68ff676ab8eb1","reportUrl":"https://assurdly.github.io/famacare-api-automation/23//#testresult/34c68ff676ab8eb1","status":"failed","statusDetails":"Response has status code 200, Patient update was successful, Patient data structure is valid, Allergies data structure is valid","time":{"start":1739555541268,"stop":1739555541346,"duration":78}},{"uid":"b0da27b29e44c225","reportUrl":"https://assurdly.github.io/famacare-api-automation/22//#testresult/b0da27b29e44c225","status":"failed","statusDetails":"Response has status code 200, Patient update was successful, Patient data structure is valid, Allergies data structure is valid","time":{"start":1739555362542,"stop":1739555362680,"duration":138}},{"uid":"810bdc45ac1d68de","reportUrl":"https://assurdly.github.io/famacare-api-automation/21//#testresult/810bdc45ac1d68de","status":"failed","statusDetails":"Response has status code 200, Patient update was successful, Patient data structure is valid, Allergies data structure is valid","time":{"start":1739555169234,"stop":1739555169545,"duration":311}},{"uid":"8c1dba19f7d4da81","reportUrl":"https://assurdly.github.io/famacare-api-automation/20//#testresult/8c1dba19f7d4da81","status":"failed","statusDetails":"Response has status code 200, Patient update was successful, Patient data structure is valid, Allergies data structure is valid","time":{"start":1739554985401,"stop":1739554985478,"duration":77}},{"uid":"e32d97800ffd369f","reportUrl":"https://assurdly.github.io/famacare-api-automation/19//#testresult/e32d97800ffd369f","status":"failed","statusDetails":"Response has status code 200, Patient update was successful, Patient data structure is valid, Allergies data structure is valid","time":{"start":1739554803016,"stop":1739554803134,"duration":118}},{"uid":"6ee98acea3daef43","reportUrl":"https://assurdly.github.io/famacare-api-automation/18//#testresult/6ee98acea3daef43","status":"failed","statusDetails":"Response has status code 200, Patient update was successful, Patient data structure is valid, Allergies data structure is valid","time":{"start":1739554627266,"stop":1739554627397,"duration":131}},{"uid":"f599284c77d7769c","reportUrl":"https://assurdly.github.io/famacare-api-automation/17//#testresult/f599284c77d7769c","status":"failed","statusDetails":"Response has status code 200, Patient update was successful, Patient data structure is valid, Allergies data structure is valid","time":{"start":1739554427548,"stop":1739554427698,"duration":150}}]},"tags":[]},"source":"6234fa2744f53bfd.json","parameterValues":["PUT - https://nelloehrback.onrender.com/api/patient/unique/D528326B","401"]}