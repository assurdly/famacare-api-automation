{"uid":"85fff93a720bd656","name":"Update Patient (upi)-Update","fullName":"FamaEMR - Test pack/RECEPTIONIST/Users(Patient)/Users(Patient)-Update(upi) Copy#Update Patient (upi)-Update","historyId":"13c6f35b9884d7718cf4861586043905:5a2dc3321712ca57c4885a2472511c02","time":{"start":1739554040928,"stop":1739554041058,"duration":130},"status":"failed","statusMessage":"Response has status code 200, Patient update was successful, Patient data structure is valid, Allergies data structure is valid","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Response has status code 200, Patient update was successful, Patient data structure is valid, Allergies data structure is valid","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Response has status code 200","time":{"start":1739554041055,"stop":1739554041055,"duration":0},"status":"failed","statusMessage":"expected response to have status code 200 but got 401","statusTrace":"AssertionError: expected response to have status code 200 but got 401\n   at Object.eval sandbox-script.js:1:163)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Patient update was successful","time":{"start":1739554041056,"stop":1739554041056,"duration":0},"status":"failed","statusMessage":"expected undefined to deeply equal 'success'","statusTrace":"AssertionError: expected undefined to deeply equal 'success'\n   at Object.eval sandbox-script.js:2:163)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Patient data structure is valid","time":{"start":1739554041056,"stop":1739554041056,"duration":0},"status":"failed","statusMessage":"expected undefined to be an object","statusTrace":"AssertionError: expected undefined to be an object\n   at Object.eval sandbox-script.js:3:163)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Allergies data structure is valid","time":{"start":1739554041057,"stop":1739554041057,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'allergies')","statusTrace":"TypeError: Cannot read properties of undefined (reading 'allergies')\n   at Object.eval sandbox-script.js:4:163)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"91db73c0212872d8","name":"TestScript","source":"91db73c0212872d8.txt","type":"text/plain","size":1571},{"uid":"226af7939877a3bb","name":"Request Headers","source":"226af7939877a3bb.json","type":"application/json","size":578},{"uid":"220b374fa72b2566","name":"Request Body","source":"220b374fa72b2566.txt","type":"text/plain","size":899},{"uid":"3832cef39bcf1b8c","name":"Response Headers","source":"3832cef39bcf1b8c.json","type":"application/json","size":579},{"uid":"b42068cd6e1e315c","name":"Response Body","source":"b42068cd6e1e315c.txt","type":"text/plain","size":31}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1326-415"},{"name":"thread","value":"pid-2344-worker-main"},{"name":"parentSuite","value":"FamaEMR - Test pack"},{"name":"suite","value":"RECEPTIONIST"},{"name":"subSuite","value":"Users(Patient) > Users(Patient)-Update(upi) Copy"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"PUT - https://nelloehrback.onrender.com/api/patient/unique/D528326B"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":6,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":6},"items":[{"uid":"98625e56dddb929a","reportUrl":"https://assurdly.github.io/famacare-api-automation/14//#testresult/98625e56dddb929a","status":"failed","statusDetails":"Response has status code 200, Patient update was successful, Patient data structure is valid, Allergies data structure is valid","time":{"start":1739553843928,"stop":1739553844038,"duration":110}},{"uid":"24db709ca4615594","reportUrl":"https://assurdly.github.io/famacare-api-automation/13//#testresult/24db709ca4615594","status":"failed","statusDetails":"Response has status code 200, Patient update was successful, Patient data structure is valid, Allergies data structure is valid","time":{"start":1739553648615,"stop":1739553648766,"duration":151}},{"uid":"735914ae88e38e8d","reportUrl":"https://assurdly.github.io/famacare-api-automation/12//#testresult/735914ae88e38e8d","status":"failed","statusDetails":"Response has status code 200, Patient update was successful, Patient data structure is valid, Allergies data structure is valid","time":{"start":1739553448218,"stop":1739553448315,"duration":97}},{"uid":"229011f345913a44","reportUrl":"https://assurdly.github.io/famacare-api-automation/11//#testresult/229011f345913a44","status":"failed","statusDetails":"Response has status code 200, Patient update was successful, Patient data structure is valid, Allergies data structure is valid","time":{"start":1739553256836,"stop":1739553257166,"duration":330}},{"uid":"162d48f6d605dca1","reportUrl":"https://assurdly.github.io/famacare-api-automation/10//#testresult/162d48f6d605dca1","status":"failed","statusDetails":"Response has status code 200, Patient update was successful, Patient data structure is valid, Allergies data structure is valid","time":{"start":1739553070210,"stop":1739553070449,"duration":239}}]},"tags":[]},"source":"85fff93a720bd656.json","parameterValues":["PUT - https://nelloehrback.onrender.com/api/patient/unique/D528326B","401"]}