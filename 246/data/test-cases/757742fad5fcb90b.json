{"uid":"757742fad5fcb90b","name":"fetch all services-Successful","fullName":"FamaEMR - Test pack/RECEPTIONIST/Services/fetch all services#fetch all services-Successful","historyId":"12957509f2ab99b444732b3348691b75:f7b688ff8e69ed1c2a72b2eef3df6c2f","time":{"start":1739740932765,"stop":1739740932950,"duration":185},"status":"failed","statusMessage":"Response status is 200, Response contains services, Service details are valid","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Response status is 200, Response contains services, Service details are valid","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Response status is 200","time":{"start":1739740932947,"stop":1739740932947,"duration":0},"status":"failed","statusMessage":"expected response to have status code 200 but got 401","statusTrace":"AssertionError: expected response to have status code 200 but got 401\n   at Object.eval sandbox-script.js:1:391)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Response contains services","time":{"start":1739740932948,"stop":1739740932948,"duration":0},"status":"failed","statusMessage":"expected undefined to deeply equal 'success'","statusTrace":"AssertionError: expected undefined to deeply equal 'success'\n   at Object.eval sandbox-script.js:2:391)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Service details are valid","time":{"start":1739740932948,"stop":1739740932948,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading '0')","statusTrace":"TypeError: Cannot read properties of undefined (reading '0')\n   at Object.eval sandbox-script.js:3:391)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"fb6dc1e8f87573c0","name":"TestScript","source":"fb6dc1e8f87573c0.txt","type":"text/plain","size":1108},{"uid":"ab93fee378d81409","name":"Request Headers","source":"ab93fee378d81409.json","type":"application/json","size":328},{"uid":"4f0f33ea9fc4c6e4","name":"Response Headers","source":"4f0f33ea9fc4c6e4.json","type":"application/json","size":354},{"uid":"78c46bbd949bf4f2","name":"Response Body","source":"78c46bbd949bf4f2.txt","type":"text/plain","size":32}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":4,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1680-118"},{"name":"thread","value":"pid-2341-worker-main"},{"name":"parentSuite","value":"FamaEMR - Test pack"},{"name":"suite","value":"RECEPTIONIST"},{"name":"subSuite","value":"Services > fetch all services"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"GET - https://testback.famacare.com/api/service/fetch"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":5,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":5},"items":[{"uid":"b779b398b2d2e457","reportUrl":"https://assurdly.github.io/famacare-api-automation/245//#testresult/b779b398b2d2e457","status":"failed","statusDetails":"Response status is 200, Response contains services, Service details are valid","time":{"start":1739740778811,"stop":1739740778929,"duration":118}},{"uid":"f2ab79f560dd18a6","reportUrl":"https://assurdly.github.io/famacare-api-automation/244//#testresult/f2ab79f560dd18a6","status":"failed","statusDetails":"Response status is 200, Response contains services, Service details are valid","time":{"start":1739740550858,"stop":1739740550980,"duration":122}},{"uid":"75383471a16fe20f","reportUrl":"https://assurdly.github.io/famacare-api-automation/243//#testresult/75383471a16fe20f","status":"failed","statusDetails":"Response status is 200, Response contains services, Service details are valid","time":{"start":1739740383813,"stop":1739740383998,"duration":185}},{"uid":"ffa74541248cb35f","reportUrl":"https://assurdly.github.io/famacare-api-automation/242//#testresult/ffa74541248cb35f","status":"failed","statusDetails":"Response status is 200, Response contains services, Service details are valid","time":{"start":1739740049877,"stop":1739740050061,"duration":184}}]},"tags":[]},"source":"757742fad5fcb90b.json","parameterValues":["GET - https://testback.famacare.com/api/service/fetch","401"]}