{"uid":"5accfc610cf36c3d","name":"Search Patient by upi-Receptionist-Successful","fullName":"FamaEMR - Test pack/RECEPTIONIST/Users(Patient)/Users(PatientSearch)#Search Patient by upi-Receptionist-Successful","historyId":"70a29c7f03e01bc1fb44785243c6e379:a9166f8479ac49d92a385a5499a91573","time":{"start":1739740902497,"stop":1739740902681,"duration":184},"status":"failed","statusMessage":"Response status is success and code is 200, Users array is valid and contains at least one user, First user details are properly structured","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Response status is success and code is 200, Users array is valid and contains at least one user, First user details are properly structured","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Response status is success and code is 200","time":{"start":1739740902679,"stop":1739740902679,"duration":0},"status":"failed","statusMessage":"expected response to have status code 200 but got 401","statusTrace":"AssertionError: expected response to have status code 200 but got 401\n   at Object.eval sandbox-script.js:1:327)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Users array is valid and contains at least one user","time":{"start":1739740902680,"stop":1739740902680,"duration":0},"status":"failed","statusMessage":"expected undefined to be an array","statusTrace":"AssertionError: expected undefined to be an array\n   at Object.eval sandbox-script.js:2:327)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"First user details are properly structured","time":{"start":1739740902680,"stop":1739740902680,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading '0')","statusTrace":"TypeError: Cannot read properties of undefined (reading '0')\n   at Object.eval sandbox-script.js:3:327)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"3549ff3d1bb0fb40","name":"TestScript","source":"3549ff3d1bb0fb40.txt","type":"text/plain","size":1016},{"uid":"4bb2db934ce74802","name":"Request Headers","source":"4bb2db934ce74802.json","type":"application/json","size":328},{"uid":"509dae921338b6c5","name":"Response Headers","source":"509dae921338b6c5.json","type":"application/json","size":354},{"uid":"3ca22d6e82f081dd","name":"Response Body","source":"3ca22d6e82f081dd.txt","type":"text/plain","size":32}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":4,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1680-118"},{"name":"thread","value":"pid-2341-worker-main"},{"name":"parentSuite","value":"FamaEMR - Test pack"},{"name":"suite","value":"RECEPTIONIST"},{"name":"subSuite","value":"Users(Patient) > Users(PatientSearch)"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"GET - https://testback.famacare.com/api/patient/search-users?query=56C36693"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":5,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":5},"items":[{"uid":"975b7693012e0c0b","reportUrl":"https://assurdly.github.io/famacare-api-automation/245//#testresult/975b7693012e0c0b","status":"failed","statusDetails":"Response status is success and code is 200, Users array is valid and contains at least one user, First user details are properly structured","time":{"start":1739740721903,"stop":1739740722035,"duration":132}},{"uid":"30ff0a7ce410c29","reportUrl":"https://assurdly.github.io/famacare-api-automation/244//#testresult/30ff0a7ce410c29","status":"failed","statusDetails":"Response status is success and code is 200, Users array is valid and contains at least one user, First user details are properly structured","time":{"start":1739740526682,"stop":1739740526803,"duration":121}},{"uid":"7f68ed6b2309a1","reportUrl":"https://assurdly.github.io/famacare-api-automation/243//#testresult/7f68ed6b2309a1","status":"failed","statusDetails":"Response status is success and code is 200, Users array is valid and contains at least one user, First user details are properly structured","time":{"start":1739740353745,"stop":1739740353930,"duration":185}},{"uid":"d99aeb2c3996402a","reportUrl":"https://assurdly.github.io/famacare-api-automation/242//#testresult/d99aeb2c3996402a","status":"failed","statusDetails":"Response status is success and code is 200, Users array is valid and contains at least one user, First user details are properly structured","time":{"start":1739740019755,"stop":1739740019939,"duration":184}}]},"tags":[]},"source":"5accfc610cf36c3d.json","parameterValues":["GET - https://testback.famacare.com/api/patient/search-users?query=56C36693","401"]}