{"uid":"405a53a25c8fc38b","name":"Update Patient (upi)-Update-Successful","fullName":"FamaEMR - Test pack/RECEPTIONIST/Users(Patient)/Users(Patient)-Update(upi)#Update Patient (upi)-Update-Successful","historyId":"110708b8a05cccab34f6555d595d7675:74fdb8862b0f56f8f71fb786eb4293ff","time":{"start":1739740903244,"stop":1739740903431,"duration":187},"status":"failed","statusMessage":"Response has status code 200, Patient update was successful, Patient data structure is valid, Allergies data structure is valid","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Response has status code 200, Patient update was successful, Patient data structure is valid, Allergies data structure is valid","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Response has status code 200","time":{"start":1739740903428,"stop":1739740903428,"duration":0},"status":"failed","statusMessage":"expected response to have status code 200 but got 401","statusTrace":"AssertionError: expected response to have status code 200 but got 401\n   at Object.eval sandbox-script.js:1:331)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Patient update was successful","time":{"start":1739740903428,"stop":1739740903428,"duration":0},"status":"failed","statusMessage":"expected undefined to deeply equal 'success'","statusTrace":"AssertionError: expected undefined to deeply equal 'success'\n   at Object.eval sandbox-script.js:2:331)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Patient data structure is valid","time":{"start":1739740903429,"stop":1739740903429,"duration":0},"status":"failed","statusMessage":"expected undefined to be an object","statusTrace":"AssertionError: expected undefined to be an object\n   at Object.eval sandbox-script.js:3:331)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Allergies data structure is valid","time":{"start":1739740903429,"stop":1739740903429,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'allergies')","statusTrace":"TypeError: Cannot read properties of undefined (reading 'allergies')\n   at Object.eval sandbox-script.js:4:331)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"1ec8fa0becc485d3","name":"TestScript","source":"1ec8fa0becc485d3.txt","type":"text/plain","size":1571},{"uid":"72f026df60746fc3","name":"Request Headers","source":"72f026df60746fc3.json","type":"application/json","size":397},{"uid":"93e4d19023119f5","name":"Request Body","source":"93e4d19023119f5.txt","type":"text/plain","size":899},{"uid":"b273f1f2ef536e73","name":"Response Headers","source":"b273f1f2ef536e73.json","type":"application/json","size":354},{"uid":"d4bed46af95c0cc2","name":"Response Body","source":"d4bed46af95c0cc2.txt","type":"text/plain","size":32}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1680-118"},{"name":"thread","value":"pid-2341-worker-main"},{"name":"parentSuite","value":"FamaEMR - Test pack"},{"name":"suite","value":"RECEPTIONIST"},{"name":"subSuite","value":"Users(Patient) > Users(Patient)-Update(upi)"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"PUT - https://testback.famacare.com/api/patient/unique/D528326B"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":5,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":5},"items":[{"uid":"845b05e51d47c76f","reportUrl":"https://assurdly.github.io/famacare-api-automation/245//#testresult/845b05e51d47c76f","status":"failed","statusDetails":"Response has status code 200, Patient update was successful, Patient data structure is valid, Allergies data structure is valid","time":{"start":1739740722407,"stop":1739740722525,"duration":118}},{"uid":"b28bece4c221eb62","reportUrl":"https://assurdly.github.io/famacare-api-automation/244//#testresult/b28bece4c221eb62","status":"failed","statusDetails":"Response has status code 200, Patient update was successful, Patient data structure is valid, Allergies data structure is valid","time":{"start":1739740527174,"stop":1739740527297,"duration":123}},{"uid":"ae8dae6fd6e622e3","reportUrl":"https://assurdly.github.io/famacare-api-automation/243//#testresult/ae8dae6fd6e622e3","status":"failed","statusDetails":"Response has status code 200, Patient update was successful, Patient data structure is valid, Allergies data structure is valid","time":{"start":1739740354498,"stop":1739740354686,"duration":188}},{"uid":"1db3881862da3b14","reportUrl":"https://assurdly.github.io/famacare-api-automation/242//#testresult/1db3881862da3b14","status":"failed","statusDetails":"Response has status code 200, Patient update was successful, Patient data structure is valid, Allergies data structure is valid","time":{"start":1739740020501,"stop":1739740020687,"duration":186}}]},"tags":[]},"source":"405a53a25c8fc38b.json","parameterValues":["PUT - https://testback.famacare.com/api/patient/unique/D528326B","401"]}