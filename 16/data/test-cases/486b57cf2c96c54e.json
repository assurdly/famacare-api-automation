{"uid":"486b57cf2c96c54e","name":"Update Patient (upi)-EmptyFields","fullName":"FamaEMR - Test pack/RECEPTIONIST/Users(Patient)/Users(Patient)-Update(upi) Copy#Update Patient (upi)-EmptyFields","historyId":"05a6815bc47987b97a7f58b7e7edb33c:5a2dc3321712ca57c4885a2472511c02","time":{"start":1739554225156,"stop":1739554225243,"duration":87},"status":"failed","statusMessage":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Response status code is 400","time":{"start":1739554225239,"stop":1739554225239,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:164)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Response status is failed","time":{"start":1739554225240,"stop":1739554225240,"duration":0},"status":"failed","statusMessage":"expected undefined to deeply equal 'failed'","statusTrace":"AssertionError: expected undefined to deeply equal 'failed'\n   at Object.eval sandbox-script.js:2:164)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Error list is not empty","time":{"start":1739554225240,"stop":1739554225240,"duration":0},"status":"failed","statusMessage":"expected undefined to be an array","statusTrace":"AssertionError: expected undefined to be an array\n   at Object.eval sandbox-script.js:3:164)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Validating required fields","time":{"start":1739554225241,"stop":1739554225241,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'some')","statusTrace":"TypeError: Cannot read properties of undefined (reading 'some')\n   at Object.eval sandbox-script.js:4:164)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Each error object has required properties","time":{"start":1739554225241,"stop":1739554225241,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'forEach')","statusTrace":"TypeError: Cannot read properties of undefined (reading 'forEach')\n   at Object.eval sandbox-script.js:5:164)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"9a595377c0f68302","name":"TestScript","source":"9a595377c0f68302.txt","type":"text/plain","size":1231},{"uid":"d721ff6515cc54b1","name":"Request Headers","source":"d721ff6515cc54b1.json","type":"application/json","size":578},{"uid":"ff4da1b82f255883","name":"Request Body","source":"ff4da1b82f255883.txt","type":"text/plain","size":686},{"uid":"a69972da0886725","name":"Response Headers","source":"a69972da0886725.json","type":"application/json","size":579},{"uid":"72bfc83cb27b0c59","name":"Response Body","source":"72bfc83cb27b0c59.txt","type":"text/plain","size":31}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":5,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1947-39"},{"name":"thread","value":"pid-2329-worker-main"},{"name":"parentSuite","value":"FamaEMR - Test pack"},{"name":"suite","value":"RECEPTIONIST"},{"name":"subSuite","value":"Users(Patient) > Users(Patient)-Update(upi) Copy"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"PUT - https://nelloehrback.onrender.com/api/patient/unique/D528326B"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":7,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":7},"items":[{"uid":"83c436dc8bad4c7b","reportUrl":"https://assurdly.github.io/famacare-api-automation/15//#testresult/83c436dc8bad4c7b","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","time":{"start":1739554041060,"stop":1739554041183,"duration":123}},{"uid":"68cb6d37ce7e109b","reportUrl":"https://assurdly.github.io/famacare-api-automation/14//#testresult/68cb6d37ce7e109b","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","time":{"start":1739553844041,"stop":1739553844148,"duration":107}},{"uid":"9b99b270037603d7","reportUrl":"https://assurdly.github.io/famacare-api-automation/13//#testresult/9b99b270037603d7","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","time":{"start":1739553648769,"stop":1739553648917,"duration":148}},{"uid":"9780d30c1802a89c","reportUrl":"https://assurdly.github.io/famacare-api-automation/12//#testresult/9780d30c1802a89c","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","time":{"start":1739553448318,"stop":1739553448452,"duration":134}},{"uid":"b9694b205ffaa0f","reportUrl":"https://assurdly.github.io/famacare-api-automation/11//#testresult/b9694b205ffaa0f","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","time":{"start":1739553257168,"stop":1739553257348,"duration":180}},{"uid":"2eb0d7e2725efb05","reportUrl":"https://assurdly.github.io/famacare-api-automation/10//#testresult/2eb0d7e2725efb05","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","time":{"start":1739553070452,"stop":1739553070605,"duration":153}}]},"tags":[]},"source":"486b57cf2c96c54e.json","parameterValues":["PUT - https://nelloehrback.onrender.com/api/patient/unique/D528326B","401"]}