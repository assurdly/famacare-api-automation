{"uid":"ff61e86e4fbf6880","name":"Register Patient-Receptionist-EmailExist","fullName":"FamaEMR - Test pack/RECEPTIONIST/Users(Patient)/Users(Patient)-Register#Register Patient-Receptionist-EmailExist","historyId":"64bcf5794c2f9748c294119fc7ef9723:e67298dceb95d129a6f6f0482e8671b4","time":{"start":1739554223143,"stop":1739554223241,"duration":98},"status":"failed","statusMessage":"Response code is 400, Patient registration failure message is correct","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Response code is 400, Patient registration failure message is correct","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Response code is 400","time":{"start":1739554223239,"stop":1739554223239,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:145)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Patient registration failure message is correct","time":{"start":1739554223240,"stop":1739554223240,"duration":0},"status":"failed","statusMessage":"expected undefined to deeply equal 'failed'","statusTrace":"AssertionError: expected undefined to deeply equal 'failed'\n   at Object.eval sandbox-script.js:2:145)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"7a3ac0cbcfe7bb93","name":"PreRequest","source":"7a3ac0cbcfe7bb93.txt","type":"text/plain","size":154},{"uid":"71cd39a5d68f500c","name":"Request Headers","source":"71cd39a5d68f500c.json","type":"application/json","size":586},{"uid":"c0822a36881ad631","name":"Request Body","source":"c0822a36881ad631.txt","type":"text/plain","size":729},{"uid":"7726a9d17b1c69c5","name":"Response Headers","source":"7726a9d17b1c69c5.json","type":"application/json","size":579},{"uid":"b801b290395b3013","name":"Response Body","source":"b801b290395b3013.txt","type":"text/plain","size":31}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1947-39"},{"name":"thread","value":"pid-2329-worker-main"},{"name":"parentSuite","value":"FamaEMR - Test pack"},{"name":"suite","value":"RECEPTIONIST"},{"name":"subSuite","value":"Users(Patient) > Users(Patient)-Register"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://nelloehrback.onrender.com/api/patient/register"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":3},"items":[{"uid":"eddf011ed949bd7","reportUrl":"https://assurdly.github.io/famacare-api-automation/15//#testresult/eddf011ed949bd7","status":"failed","statusDetails":"Response code is 400, Patient registration failure message is correct","time":{"start":1739554038499,"stop":1739554038719,"duration":220}},{"uid":"407b1449b4fae855","reportUrl":"https://assurdly.github.io/famacare-api-automation/14//#testresult/407b1449b4fae855","status":"failed","statusDetails":"Response code is 400, Patient registration failure message is correct","time":{"start":1739553841591,"stop":1739553841709,"duration":118}}]},"tags":[]},"source":"ff61e86e4fbf6880.json","parameterValues":["POST - https://nelloehrback.onrender.com/api/patient/register","401"]}