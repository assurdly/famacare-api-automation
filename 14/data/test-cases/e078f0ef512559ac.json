{"uid":"e078f0ef512559ac","name":"Update Patient (upi)-EmptyFields","fullName":"FamaEMR - Test pack/SUPER_ADMIN/Users(Patient)/Users(Patient)-Update(upi)#Update Patient (upi)-EmptyFields","historyId":"aa700776b11dcd72d5e2a89ca25cdd6e:5a2dc3321712ca57c4885a2472511c02","time":{"start":1739553761688,"stop":1739553761811,"duration":123},"status":"failed","statusMessage":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Response status code is 400","time":{"start":1739553761807,"stop":1739553761807,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:43)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Response status is failed","time":{"start":1739553761808,"stop":1739553761808,"duration":0},"status":"failed","statusMessage":"expected undefined to deeply equal 'failed'","statusTrace":"AssertionError: expected undefined to deeply equal 'failed'\n   at Object.eval sandbox-script.js:2:43)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Error list is not empty","time":{"start":1739553761808,"stop":1739553761808,"duration":0},"status":"failed","statusMessage":"expected undefined to be an array","statusTrace":"AssertionError: expected undefined to be an array\n   at Object.eval sandbox-script.js:3:43)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Validating required fields","time":{"start":1739553761809,"stop":1739553761809,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'some')","statusTrace":"TypeError: Cannot read properties of undefined (reading 'some')\n   at Object.eval sandbox-script.js:4:43)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Each error object has required properties","time":{"start":1739553761810,"stop":1739553761810,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'forEach')","statusTrace":"TypeError: Cannot read properties of undefined (reading 'forEach')\n   at Object.eval sandbox-script.js:5:43)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"a5432f5676cbcc9e","name":"TestScript","source":"a5432f5676cbcc9e.txt","type":"text/plain","size":1231},{"uid":"b38cce0c2f2c04ef","name":"Request Headers","source":"b38cce0c2f2c04ef.json","type":"application/json","size":578},{"uid":"7a8980228bbb8ee6","name":"Request Body","source":"7a8980228bbb8ee6.txt","type":"text/plain","size":686},{"uid":"17e735259edd383d","name":"Response Headers","source":"17e735259edd383d.json","type":"application/json","size":579},{"uid":"7f24c3bed786bb15","name":"Response Body","source":"7f24c3bed786bb15.txt","type":"text/plain","size":31}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":5,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1376-484"},{"name":"thread","value":"pid-2336-worker-main"},{"name":"parentSuite","value":"FamaEMR - Test pack"},{"name":"suite","value":"SUPER_ADMIN"},{"name":"subSuite","value":"Users(Patient) > Users(Patient)-Update(upi)"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"PUT - https://nelloehrback.onrender.com/api/patient/unique/D528326B"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":8,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":8},"items":[{"uid":"a558e038a295b925","reportUrl":"https://assurdly.github.io/famacare-api-automation/13//#testresult/a558e038a295b925","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","time":{"start":1739553559751,"stop":1739553559911,"duration":160}},{"uid":"afb09d9075d257bb","reportUrl":"https://assurdly.github.io/famacare-api-automation/12//#testresult/afb09d9075d257bb","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","time":{"start":1739553367923,"stop":1739553367992,"duration":69}},{"uid":"166f8f42f1139038","reportUrl":"https://assurdly.github.io/famacare-api-automation/11//#testresult/166f8f42f1139038","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","time":{"start":1739553169332,"stop":1739553169484,"duration":152}},{"uid":"68a0bb3aaf051081","reportUrl":"https://assurdly.github.io/famacare-api-automation/10//#testresult/68a0bb3aaf051081","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","time":{"start":1739552983809,"stop":1739552983969,"duration":160}},{"uid":"19829b6b485a1ce1","reportUrl":"https://assurdly.github.io/famacare-api-automation/9//#testresult/19829b6b485a1ce1","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","time":{"start":1739552799887,"stop":1739552799981,"duration":94}},{"uid":"8a41e6c8d85a7dd2","reportUrl":"https://assurdly.github.io/famacare-api-automation/8//#testresult/8a41e6c8d85a7dd2","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","time":{"start":1739552616018,"stop":1739552616173,"duration":155}},{"uid":"d019d87f7c7e5482","reportUrl":"https://assurdly.github.io/famacare-api-automation/7//#testresult/d019d87f7c7e5482","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","time":{"start":1739552498266,"stop":1739552498347,"duration":81}}]},"tags":[]},"source":"e078f0ef512559ac.json","parameterValues":["PUT - https://nelloehrback.onrender.com/api/patient/unique/D528326B","401"]}