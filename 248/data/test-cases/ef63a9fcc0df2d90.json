{"uid":"ef63a9fcc0df2d90","name":"Update Patient (upi)-EmptyFields","fullName":"FamaEMR - Test pack/RECEPTIONIST/Users(Patient)/Users(Patient)-Update(upi)#Update Patient (upi)-EmptyFields","historyId":"19bca837fca3ef99ccdbcae93e1a8efc:74fdb8862b0f56f8f71fb786eb4293ff","time":{"start":1739741243145,"stop":1739741243265,"duration":120},"status":"failed","statusMessage":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Response status code is 400","time":{"start":1739741243261,"stop":1739741243261,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:332)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Response status is failed","time":{"start":1739741243262,"stop":1739741243262,"duration":0},"status":"failed","statusMessage":"expected undefined to deeply equal 'failed'","statusTrace":"AssertionError: expected undefined to deeply equal 'failed'\n   at Object.eval sandbox-script.js:2:332)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Error list is not empty","time":{"start":1739741243262,"stop":1739741243262,"duration":0},"status":"failed","statusMessage":"expected undefined to be an array","statusTrace":"AssertionError: expected undefined to be an array\n   at Object.eval sandbox-script.js:3:332)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Validating required fields","time":{"start":1739741243263,"stop":1739741243263,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'some')","statusTrace":"TypeError: Cannot read properties of undefined (reading 'some')\n   at Object.eval sandbox-script.js:4:332)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Each error object has required properties","time":{"start":1739741243263,"stop":1739741243263,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'forEach')","statusTrace":"TypeError: Cannot read properties of undefined (reading 'forEach')\n   at Object.eval sandbox-script.js:5:332)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"7793710485d2fa29","name":"TestScript","source":"7793710485d2fa29.txt","type":"text/plain","size":1231},{"uid":"1224ab773d4d139","name":"Request Headers","source":"1224ab773d4d139.json","type":"application/json","size":397},{"uid":"38bb651318f1ae4","name":"Request Body","source":"38bb651318f1ae4.txt","type":"text/plain","size":686},{"uid":"7292d0d620be1188","name":"Response Headers","source":"7292d0d620be1188.json","type":"application/json","size":354},{"uid":"bf4694bafeddd0e5","name":"Response Body","source":"bf4694bafeddd0e5.txt","type":"text/plain","size":32}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":5,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1337-524"},{"name":"thread","value":"pid-2393-worker-main"},{"name":"parentSuite","value":"FamaEMR - Test pack"},{"name":"suite","value":"RECEPTIONIST"},{"name":"subSuite","value":"Users(Patient) > Users(Patient)-Update(upi)"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"PUT - https://testback.famacare.com/api/patient/unique/D528326B"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":7,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":7},"items":[{"uid":"c24d1ef359e65ee5","reportUrl":"https://assurdly.github.io/famacare-api-automation/247//#testresult/c24d1ef359e65ee5","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","time":{"start":1739741069553,"stop":1739741069691,"duration":138}},{"uid":"1a4f142418393388","reportUrl":"https://assurdly.github.io/famacare-api-automation/246//#testresult/1a4f142418393388","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","time":{"start":1739740903434,"stop":1739740903620,"duration":186}},{"uid":"1a6282d5a234d5e9","reportUrl":"https://assurdly.github.io/famacare-api-automation/245//#testresult/1a6282d5a234d5e9","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","time":{"start":1739740722528,"stop":1739740722646,"duration":118}},{"uid":"ce5040b482f65eb7","reportUrl":"https://assurdly.github.io/famacare-api-automation/244//#testresult/ce5040b482f65eb7","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","time":{"start":1739740527300,"stop":1739740527423,"duration":123}},{"uid":"2feb5b4d2553555a","reportUrl":"https://assurdly.github.io/famacare-api-automation/243//#testresult/2feb5b4d2553555a","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","time":{"start":1739740354689,"stop":1739740354876,"duration":187}},{"uid":"6bc1fce04f3b0c0a","reportUrl":"https://assurdly.github.io/famacare-api-automation/242//#testresult/6bc1fce04f3b0c0a","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","time":{"start":1739740020690,"stop":1739740020888,"duration":198}}]},"tags":[]},"source":"ef63a9fcc0df2d90.json","parameterValues":["PUT - https://testback.famacare.com/api/patient/unique/D528326B","401"]}