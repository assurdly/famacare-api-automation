{"uid":"b8e4d658f2cbfdac","name":"Get Investigation by plan_code-InvalidPlanCode","fullName":"FamaEMR - Test pack/DOCTOR/Services/Investigation by plan_code#Get Investigation by plan_code-InvalidPlanCode","historyId":"fc49b26277b8f23dbae8bff17dfb84cd:fefe2f7ae52df566016cb1a7c7487bfa","time":{"start":1739741232238,"stop":1739741232362,"duration":124},"status":"failed","statusMessage":"Response status is 400, Response status is failed, Error message is correct","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Response status is 400, Response status is failed, Error message is correct","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Response status is 400","time":{"start":1739741232359,"stop":1739741232359,"duration":0},"status":"failed","statusMessage":"expected 401 to deeply equal 400","statusTrace":"AssertionError: expected 401 to deeply equal 400\n   at Object.eval sandbox-script.js:1:266)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Response status is failed","time":{"start":1739741232360,"stop":1739741232360,"duration":0},"status":"failed","statusMessage":"expected undefined to deeply equal 'failed'","statusTrace":"AssertionError: expected undefined to deeply equal 'failed'\n   at Object.eval sandbox-script.js:2:266)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Error message is correct","time":{"start":1739741232360,"stop":1739741232360,"duration":0},"status":"failed","statusMessage":"expected undefined to deeply equal 'Sponsor plan does not exist'","statusTrace":"AssertionError: expected undefined to deeply equal 'Sponsor plan does not exist'\n   at Object.eval sandbox-script.js:3:266)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"6a478945e464339","name":"TestScript","source":"6a478945e464339.txt","type":"text/plain","size":375},{"uid":"7959bf71384ce922","name":"Request Headers","source":"7959bf71384ce922.json","type":"application/json","size":507},{"uid":"9b9bdb2b5e41226e","name":"Response Headers","source":"9b9bdb2b5e41226e.json","type":"application/json","size":354},{"uid":"6a279894ecd5b322","name":"Response Body","source":"6a279894ecd5b322.txt","type":"text/plain","size":32}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":4,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1337-524"},{"name":"thread","value":"pid-2393-worker-main"},{"name":"parentSuite","value":"FamaEMR - Test pack"},{"name":"suite","value":"DOCTOR"},{"name":"subSuite","value":"Services > Investigation by plan_code"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"GET - https://testback.famacare.com/api/service/investigations/3A9"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":7,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":7},"items":[{"uid":"54a416e8117221bd","reportUrl":"https://assurdly.github.io/famacare-api-automation/247//#testresult/54a416e8117221bd","status":"failed","statusDetails":"Response status is 400, Response status is failed, Error message is correct","time":{"start":1739741057845,"stop":1739741057978,"duration":133}},{"uid":"814554f6c0003be0","reportUrl":"https://assurdly.github.io/famacare-api-automation/246//#testresult/814554f6c0003be0","status":"failed","statusDetails":"Response status is 400, Response status is failed, Error message is correct","time":{"start":1739740888475,"stop":1739740888660,"duration":185}},{"uid":"89e3e3580c6aea24","reportUrl":"https://assurdly.github.io/famacare-api-automation/245//#testresult/89e3e3580c6aea24","status":"failed","statusDetails":"Response status is 400, Response status is failed, Error message is correct","time":{"start":1739740711416,"stop":1739740711543,"duration":127}},{"uid":"4811ba86da6ef4a1","reportUrl":"https://assurdly.github.io/famacare-api-automation/244//#testresult/4811ba86da6ef4a1","status":"failed","statusDetails":"Response status is 400, Response status is failed, Error message is correct","time":{"start":1739740516442,"stop":1739740516563,"duration":121}},{"uid":"bbc0c9d1d24b1018","reportUrl":"https://assurdly.github.io/famacare-api-automation/243//#testresult/bbc0c9d1d24b1018","status":"failed","statusDetails":"Response status is 400, Response status is failed, Error message is correct","time":{"start":1739740339531,"stop":1739740339716,"duration":185}},{"uid":"465c82507f116b37","reportUrl":"https://assurdly.github.io/famacare-api-automation/242//#testresult/465c82507f116b37","status":"failed","statusDetails":"Response status is 400, Response status is failed, Error message is correct","time":{"start":1739740005718,"stop":1739740005900,"duration":182}}]},"tags":[]},"source":"b8e4d658f2cbfdac.json","parameterValues":["GET - https://testback.famacare.com/api/service/investigations/3A9","401"]}