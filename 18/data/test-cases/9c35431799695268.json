{"uid":"9c35431799695268","name":"Create-AlreadyExist","fullName":"FamaEMR - Test pack/DOCTOR/Diagnosis/Diagnosis-Create#Create-AlreadyExist","historyId":"793974806566a93b6cf22a1ce8840870:8b134ad2a21c564eb4b465536c3544bb","time":{"start":1739554556820,"stop":1739554556960,"duration":140},"status":"failed","statusMessage":"Response has status code 400, Response contains expected fields, Response content is correct","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Response has status code 400, Response contains expected fields, Response content is correct","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Response has status code 400","time":{"start":1739554556956,"stop":1739554556956,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:124)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Response contains expected fields","time":{"start":1739554556957,"stop":1739554556957,"duration":0},"status":"failed","statusMessage":"expected { message: 'Token has expired' } to have property 'status'","statusTrace":"AssertionError: expected { message: 'Token has expired' } to have property 'status'\n   at Object.eval sandbox-script.js:2:124)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Response content is correct","time":{"start":1739554556958,"stop":1739554556958,"duration":0},"status":"failed","statusMessage":"expected undefined to deeply equal 'failed'","statusTrace":"AssertionError: expected undefined to deeply equal 'failed'\n   at Object.eval sandbox-script.js:3:124)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"a44f3a1b37bc9cf7","name":"TestScript","source":"a44f3a1b37bc9cf7.txt","type":"text/plain","size":526},{"uid":"42a60e1449d046bd","name":"Request Headers","source":"42a60e1449d046bd.json","type":"application/json","size":580},{"uid":"953dbecb2c68f41","name":"Request Body","source":"953dbecb2c68f41.txt","type":"text/plain","size":87},{"uid":"aec5446c2a7c0490","name":"Response Headers","source":"aec5446c2a7c0490.json","type":"application/json","size":579},{"uid":"55253e0d55289d67","name":"Response Body","source":"55253e0d55289d67.txt","type":"text/plain","size":31}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1074-584"},{"name":"thread","value":"pid-2350-worker-main"},{"name":"parentSuite","value":"FamaEMR - Test pack"},{"name":"suite","value":"DOCTOR"},{"name":"subSuite","value":"Diagnosis > Diagnosis-Create"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://nelloehrback.onrender.com/api/diagnosis/create"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":12,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":12},"items":[{"uid":"5604fd9ff2821d8b","reportUrl":"https://assurdly.github.io/famacare-api-automation/17//#testresult/5604fd9ff2821d8b","status":"failed","statusDetails":"Response has status code 400, Response contains expected fields, Response content is correct","time":{"start":1739554356636,"stop":1739554356810,"duration":174}},{"uid":"2a4b4f3767efa5d9","reportUrl":"https://assurdly.github.io/famacare-api-automation/16//#testresult/2a4b4f3767efa5d9","status":"failed","statusDetails":"Response has status code 400, Response contains expected fields, Response content is correct","time":{"start":1739554157731,"stop":1739554157813,"duration":82}},{"uid":"60848e11e4ca2889","reportUrl":"https://assurdly.github.io/famacare-api-automation/15//#testresult/60848e11e4ca2889","status":"failed","statusDetails":"Response has status code 400, Response contains expected fields, Response content is correct","time":{"start":1739553971161,"stop":1739553971260,"duration":99}},{"uid":"a994ee06e2774db","reportUrl":"https://assurdly.github.io/famacare-api-automation/14//#testresult/a994ee06e2774db","status":"failed","statusDetails":"Response has status code 400, Response contains expected fields, Response content is correct","time":{"start":1739553775544,"stop":1739553775636,"duration":92}},{"uid":"bca91bc0aef38e18","reportUrl":"https://assurdly.github.io/famacare-api-automation/13//#testresult/bca91bc0aef38e18","status":"failed","statusDetails":"Response has status code 400, Response contains expected fields, Response content is correct","time":{"start":1739553577597,"stop":1739553577732,"duration":135}},{"uid":"e085194388b214db","reportUrl":"https://assurdly.github.io/famacare-api-automation/12//#testresult/e085194388b214db","status":"failed","statusDetails":"Response has status code 400, Response contains expected fields, Response content is correct","time":{"start":1739553380606,"stop":1739553380700,"duration":94}},{"uid":"acd545437b03e14c","reportUrl":"https://assurdly.github.io/famacare-api-automation/11//#testresult/acd545437b03e14c","status":"failed","statusDetails":"Response has status code 400, Response contains expected fields, Response content is correct","time":{"start":1739553186860,"stop":1739553186999,"duration":139}},{"uid":"f51b9b03626bc337","reportUrl":"https://assurdly.github.io/famacare-api-automation/10//#testresult/f51b9b03626bc337","status":"failed","statusDetails":"Response has status code 400, Response contains expected fields, Response content is correct","time":{"start":1739553000382,"stop":1739553000583,"duration":201}},{"uid":"d6f61a920c1a8b61","reportUrl":"https://assurdly.github.io/famacare-api-automation/9//#testresult/d6f61a920c1a8b61","status":"failed","statusDetails":"Response has status code 400, Response contains expected fields, Response content is correct","time":{"start":1739552810444,"stop":1739552810524,"duration":80}},{"uid":"10db412dc3f5d76a","reportUrl":"https://assurdly.github.io/famacare-api-automation/8//#testresult/10db412dc3f5d76a","status":"failed","statusDetails":"Response has status code 400, Response contains expected fields, Response content is correct","time":{"start":1739552640333,"stop":1739552640484,"duration":151}},{"uid":"111e456838ef6e72","reportUrl":"https://assurdly.github.io/famacare-api-automation/7//#testresult/111e456838ef6e72","status":"failed","statusDetails":"Response has status code 400, Response contains expected fields, Response content is correct","time":{"start":1739552507892,"stop":1739552507962,"duration":70}}]},"tags":[]},"source":"9c35431799695268.json","parameterValues":["POST - https://nelloehrback.onrender.com/api/diagnosis/create","401"]}