{"uid":"2be3c5b7d0ac2f9d","name":"Update Patient (upi)-EmptyFields","fullName":"FamaEMR - Test pack/SUPER_ADMIN/Users(Patient)/Users(Patient)-Update(upi)#Update Patient (upi)-EmptyFields","historyId":"aa700776b11dcd72d5e2a89ca25cdd6e:5a2dc3321712ca57c4885a2472511c02","time":{"start":1739566362989,"stop":1739566363098,"duration":109},"status":"failed","statusMessage":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Response status code is 400","time":{"start":1739566363094,"stop":1739566363094,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:43)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Response status is failed","time":{"start":1739566363095,"stop":1739566363095,"duration":0},"status":"failed","statusMessage":"expected undefined to deeply equal 'failed'","statusTrace":"AssertionError: expected undefined to deeply equal 'failed'\n   at Object.eval sandbox-script.js:2:43)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Error list is not empty","time":{"start":1739566363095,"stop":1739566363095,"duration":0},"status":"failed","statusMessage":"expected undefined to be an array","statusTrace":"AssertionError: expected undefined to be an array\n   at Object.eval sandbox-script.js:3:43)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Validating required fields","time":{"start":1739566363096,"stop":1739566363096,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'some')","statusTrace":"TypeError: Cannot read properties of undefined (reading 'some')\n   at Object.eval sandbox-script.js:4:43)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Each error object has required properties","time":{"start":1739566363096,"stop":1739566363096,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'forEach')","statusTrace":"TypeError: Cannot read properties of undefined (reading 'forEach')\n   at Object.eval sandbox-script.js:5:43)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"e39e73802485ba26","name":"TestScript","source":"e39e73802485ba26.txt","type":"text/plain","size":1231},{"uid":"fdec30869a6c883d","name":"Request Headers","source":"fdec30869a6c883d.json","type":"application/json","size":578},{"uid":"e03f4d49562849a8","name":"Request Body","source":"e03f4d49562849a8.txt","type":"text/plain","size":686},{"uid":"da9522a8111f45b8","name":"Response Headers","source":"da9522a8111f45b8.json","type":"application/json","size":579},{"uid":"3e99adcba01b3f69","name":"Response Body","source":"3e99adcba01b3f69.txt","type":"text/plain","size":31}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":5,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1696-950"},{"name":"thread","value":"pid-2324-worker-main"},{"name":"parentSuite","value":"FamaEMR - Test pack"},{"name":"suite","value":"SUPER_ADMIN"},{"name":"subSuite","value":"Users(Patient) > Users(Patient)-Update(upi)"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"PUT - https://nelloehrback.onrender.com/api/patient/unique/D528326B"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":41,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":41},"items":[{"uid":"8d938bf6f773caac","reportUrl":"https://assurdly.github.io/famacare-api-automation/46//#testresult/8d938bf6f773caac","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","time":{"start":1739566170269,"stop":1739566170419,"duration":150}},{"uid":"644b243a58650085","reportUrl":"https://assurdly.github.io/famacare-api-automation/45//#testresult/644b243a58650085","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","time":{"start":1739565983711,"stop":1739565983839,"duration":128}},{"uid":"a37cc198598354f4","reportUrl":"https://assurdly.github.io/famacare-api-automation/44//#testresult/a37cc198598354f4","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","time":{"start":1739565801719,"stop":1739565801825,"duration":106}},{"uid":"e62dc13e5a7ecf8f","reportUrl":"https://assurdly.github.io/famacare-api-automation/43//#testresult/e62dc13e5a7ecf8f","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","time":{"start":1739565628088,"stop":1739565628173,"duration":85}},{"uid":"b1ffeeef5e91470a","reportUrl":"https://assurdly.github.io/famacare-api-automation/42//#testresult/b1ffeeef5e91470a","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","time":{"start":1739565424862,"stop":1739565425062,"duration":200}},{"uid":"e3a5dba14c7f2d71","reportUrl":"https://assurdly.github.io/famacare-api-automation/41//#testresult/e3a5dba14c7f2d71","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","time":{"start":1739565238935,"stop":1739565239077,"duration":142}},{"uid":"61d5aeb6b0c60e89","reportUrl":"https://assurdly.github.io/famacare-api-automation/40//#testresult/61d5aeb6b0c60e89","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","time":{"start":1739565054537,"stop":1739565054687,"duration":150}},{"uid":"4fd3a5c155fd7422","reportUrl":"https://assurdly.github.io/famacare-api-automation/39//#testresult/4fd3a5c155fd7422","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","time":{"start":1739564871123,"stop":1739564871260,"duration":137}},{"uid":"8e0a7e2240d04319","reportUrl":"https://assurdly.github.io/famacare-api-automation/38//#testresult/8e0a7e2240d04319","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","time":{"start":1739564680973,"stop":1739564681108,"duration":135}},{"uid":"43d9c3620629914b","reportUrl":"https://assurdly.github.io/famacare-api-automation/37//#testresult/43d9c3620629914b","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","time":{"start":1739564495584,"stop":1739564495728,"duration":144}},{"uid":"42041ddcea0e5ed2","reportUrl":"https://assurdly.github.io/famacare-api-automation/36//#testresult/42041ddcea0e5ed2","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","time":{"start":1739564306180,"stop":1739564306262,"duration":82}},{"uid":"e7dae7b16424ef78","reportUrl":"https://assurdly.github.io/famacare-api-automation/35//#testresult/e7dae7b16424ef78","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","time":{"start":1739564105137,"stop":1739564105269,"duration":132}},{"uid":"f2980849cce08963","reportUrl":"https://assurdly.github.io/famacare-api-automation/34//#testresult/f2980849cce08963","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","time":{"start":1739563919384,"stop":1739563919484,"duration":100}},{"uid":"b8936421fad719a1","reportUrl":"https://assurdly.github.io/famacare-api-automation/33//#testresult/b8936421fad719a1","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","time":{"start":1739563731547,"stop":1739563731688,"duration":141}},{"uid":"a45b25523e6a3bd9","reportUrl":"https://assurdly.github.io/famacare-api-automation/32//#testresult/a45b25523e6a3bd9","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","time":{"start":1739563341233,"stop":1739563341568,"duration":335}},{"uid":"3a442ca0d36b225d","reportUrl":"https://assurdly.github.io/famacare-api-automation/31//#testresult/3a442ca0d36b225d","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","time":{"start":1739563147158,"stop":1739563147264,"duration":106}},{"uid":"2803050c89054a72","reportUrl":"https://assurdly.github.io/famacare-api-automation/30//#testresult/2803050c89054a72","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","time":{"start":1739562956810,"stop":1739562956942,"duration":132}},{"uid":"9dcdaee1b1b08830","reportUrl":"https://assurdly.github.io/famacare-api-automation/29//#testresult/9dcdaee1b1b08830","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","time":{"start":1739562776047,"stop":1739562776130,"duration":83}},{"uid":"fb074f9d61008dff","reportUrl":"https://assurdly.github.io/famacare-api-automation/28//#testresult/fb074f9d61008dff","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","time":{"start":1739562580949,"stop":1739562581064,"duration":115}},{"uid":"409462d303f76992","reportUrl":"https://assurdly.github.io/famacare-api-automation/27//#testresult/409462d303f76992","status":"failed","statusDetails":"Response status code is 400, Response status is failed, Error list is not empty, Validating required fields, Each error object has required properties","time":{"start":1739557902233,"stop":1739557902366,"duration":133}}]},"tags":[]},"source":"2be3c5b7d0ac2f9d.json","parameterValues":["PUT - https://nelloehrback.onrender.com/api/patient/unique/D528326B","401"]}