{"uid":"fbc13ea76d6bcaa6","name":"Register Patient-SuperAdmin-EmailExist","fullName":"FamaEMR - Test pack/RECEPTIONIST/Users(Patient)/Users(Patient)-Register#Register Patient-SuperAdmin-EmailExist","historyId":"7a0c2dd73be8e5302c05ffec36c1fde0:e67298dceb95d129a6f6f0482e8671b4","time":{"start":1739553446417,"stop":1739553446500,"duration":83},"status":"failed","statusMessage":"Response code is 400, Patient registration failure message is correct","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Response code is 400, Patient registration failure message is correct","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Response code is 400","time":{"start":1739553446498,"stop":1739553446498,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:145)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Patient registration failure message is correct","time":{"start":1739553446498,"stop":1739553446498,"duration":0},"status":"failed","statusMessage":"expected undefined to deeply equal 'failed'","statusTrace":"AssertionError: expected undefined to deeply equal 'failed'\n   at Object.eval sandbox-script.js:2:145)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"5ce9a0884683343c","name":"PreRequest","source":"5ce9a0884683343c.txt","type":"text/plain","size":154},{"uid":"3aab410561be1731","name":"Request Headers","source":"3aab410561be1731.json","type":"application/json","size":578},{"uid":"6808f8b12ca9f613","name":"Request Body","source":"6808f8b12ca9f613.txt","type":"text/plain","size":729},{"uid":"ac08ff0f2285fb1c","name":"Response Headers","source":"ac08ff0f2285fb1c.json","type":"application/json","size":579},{"uid":"3185aea8c0342413","name":"Response Body","source":"3185aea8c0342413.txt","type":"text/plain","size":31}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1046-619"},{"name":"thread","value":"pid-2330-worker-main"},{"name":"parentSuite","value":"FamaEMR - Test pack"},{"name":"suite","value":"RECEPTIONIST"},{"name":"subSuite","value":"Users(Patient) > Users(Patient)-Register"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://nelloehrback.onrender.com/api/patient/register"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":3},"items":[{"uid":"828bcebec197b17b","reportUrl":"https://assurdly.github.io/famacare-api-automation/11//#testresult/828bcebec197b17b","status":"failed","statusDetails":"Response code is 400, Patient registration failure message is correct","time":{"start":1739553253232,"stop":1739553253379,"duration":147}},{"uid":"48fa02e61ccbabd2","reportUrl":"https://assurdly.github.io/famacare-api-automation/10//#testresult/48fa02e61ccbabd2","status":"failed","statusDetails":"Response code is 400, Patient registration failure message is correct","time":{"start":1739553066973,"stop":1739553067123,"duration":150}}]},"tags":[]},"source":"fbc13ea76d6bcaa6.json","parameterValues":["POST - https://nelloehrback.onrender.com/api/patient/register","401"]}