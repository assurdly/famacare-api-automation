{"uid":"10a5ba30583f820c","name":"Register Patient-Doctor-InvalidEmail","fullName":"FamaEMR - Test pack/DOCTOR/Users(Patient)/Users(Patient)-Register#Register Patient-Doctor-InvalidEmail","historyId":"2c440eeb2a0ffb94915447f4fb3704b2:e67298dceb95d129a6f6f0482e8671b4","time":{"start":1739552810165,"stop":1739552810235,"duration":70},"status":"failed","statusMessage":"Response code is 400, Email validation error exists","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Response code is 400, Email validation error exists","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Response code is 400","time":{"start":1739552810233,"stop":1739552810233,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:135)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Email validation error exists","time":{"start":1739552810234,"stop":1739552810234,"duration":0},"status":"failed","statusMessage":"expected undefined to deeply equal 'failed'","statusTrace":"AssertionError: expected undefined to deeply equal 'failed'\n   at Object.eval sandbox-script.js:2:135)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"b9a82d83113ae34","name":"TestScript","source":"b9a82d83113ae34.txt","type":"text/plain","size":388},{"uid":"67a90227371cdcb6","name":"Request Headers","source":"67a90227371cdcb6.json","type":"application/json","size":581},{"uid":"e7b925f063c14d6b","name":"Request Body","source":"e7b925f063c14d6b.txt","type":"text/plain","size":725},{"uid":"e86f15642e8f3e99","name":"Response Headers","source":"e86f15642e8f3e99.json","type":"application/json","size":579},{"uid":"78f21a98447bde59","name":"Response Body","source":"78f21a98447bde59.txt","type":"text/plain","size":31}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1377-176"},{"name":"thread","value":"pid-2331-worker-main"},{"name":"parentSuite","value":"FamaEMR - Test pack"},{"name":"suite","value":"DOCTOR"},{"name":"subSuite","value":"Users(Patient) > Users(Patient)-Register"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://nelloehrback.onrender.com/api/patient/register"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":3},"items":[{"uid":"2542bbd5df1dc9fe","reportUrl":"https://assurdly.github.io/famacare-api-automation/8//#testresult/2542bbd5df1dc9fe","status":"failed","statusDetails":"Response code is 400, Email validation error exists","time":{"start":1739552639746,"stop":1739552639888,"duration":142}},{"uid":"6f511f8f0796f32c","reportUrl":"https://assurdly.github.io/famacare-api-automation/7//#testresult/6f511f8f0796f32c","status":"failed","statusDetails":"Response code is 400, Email validation error exists","time":{"start":1739552507612,"stop":1739552507682,"duration":70}}]},"tags":[]},"source":"10a5ba30583f820c.json","parameterValues":["POST - https://nelloehrback.onrender.com/api/patient/register","401"]}