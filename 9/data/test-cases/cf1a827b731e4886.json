{"uid":"cf1a827b731e4886","name":"Register(staff) - EmptyFee","fullName":"FamaEMR - Test pack/SUPER_ADMIN/Authentication/Authentication-Register(staff)#Register(staff) - EmptyFee","historyId":"32d8bc83496b7be674542475de056a36:3f49c7f802d3876c8e2038303c52f5c7","time":{"start":1739552791708,"stop":1739552791797,"duration":89},"status":"failed","statusMessage":"Response status code is 400, Response body contains failure status and error details","statusTrace":"Response code: 401, status: Unauthorized","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Response status code is 400, Response body contains failure status and error details","statusTrace":"Response code: 401, status: Unauthorized","steps":[{"name":"Response status code is 400","time":{"start":1739552791794,"stop":1739552791794,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"AssertionError: expected response to have status code 400 but got 401\n   at Object.eval sandbox-script.js:1:10)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Response body contains failure status and error details","time":{"start":1739552791795,"stop":1739552791795,"duration":0},"status":"failed","statusMessage":"expected undefined to deeply equal 'failed'","statusTrace":"AssertionError: expected undefined to deeply equal 'failed'\n   at Object.eval sandbox-script.js:2:10)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"8530af94fcccca2","name":"TestScript","source":"8530af94fcccca2.txt","type":"text/plain","size":631},{"uid":"a22b9aefd6897699","name":"Request Headers","source":"a22b9aefd6897699.json","type":"application/json","size":578},{"uid":"a0ef3394191159a1","name":"Request Body","source":"a0ef3394191159a1.txt","type":"text/plain","size":339},{"uid":"5d2c66f36e2b5b0a","name":"Response Headers","source":"5d2c66f36e2b5b0a.json","type":"application/json","size":579},{"uid":"ad3291cd6307461c","name":"Response Body","source":"ad3291cd6307461c.txt","type":"text/plain","size":31}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1377-176"},{"name":"thread","value":"pid-2331-worker-main"},{"name":"parentSuite","value":"FamaEMR - Test pack"},{"name":"suite","value":"SUPER_ADMIN"},{"name":"subSuite","value":"Authentication > Authentication-Register(staff)"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://nelloehrback.onrender.com/api/auth/register"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":3},"items":[{"uid":"b7fe5f06dcaeffa0","reportUrl":"https://assurdly.github.io/famacare-api-automation/8//#testresult/b7fe5f06dcaeffa0","status":"failed","statusDetails":"Response status code is 400, Response body contains failure status and error details","time":{"start":1739552597317,"stop":1739552597513,"duration":196}},{"uid":"ad061b584e25f592","reportUrl":"https://assurdly.github.io/famacare-api-automation/7//#testresult/ad061b584e25f592","status":"failed","statusDetails":"Response status code is 400, Response body contains failure status and error details","time":{"start":1739552491389,"stop":1739552491497,"duration":108}}]},"tags":[]},"source":"cf1a827b731e4886.json","parameterValues":["POST - https://nelloehrback.onrender.com/api/auth/register","401"]}